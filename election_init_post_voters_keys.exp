#!/usr/bin/expect --

# Include common script.
source election_common.exp

# Define values from the command line.
if {[llength $argv] < 11} {
  send_user "Usage: election_init_post_voters_keys.exp vmv_far_file ssh_key_file sftp_host sftp_user \"election_name\" number_of_tellers teller teller_ip teller_main_port teller_hint_port\n"
  exit 1
}

set home_dir [lindex $argv 0]
set jar [lindex $argv 1]
set ssh_key_file [lindex $argv 2]
set sftp_host [lindex $argv 3]
set sftp_user [lindex $argv 4]
set election_name [lindex $argv 5]
set number_of_tellers [lindex $argv 6]
set teller [lindex $argv 7]
set teller_ip [lindex $argv 8]
set teller_main_port [lindex $argv 9]
set teller_hint_port [lindex $argv 10]

if {$teller == 1} {
  set number_of_voters [lindex $argv 11]
}

# Start.
send_user "Election: $election_name\n"
send_user "Tellers: $number_of_tellers\n"
send_user "Teller: $teller $teller_ip $teller_main_port $teller_hint_port\n"

cd "$home_dir/elections/$election_name"

# If this is teller 1, upload the voters' keys and create the voters' tracker numbers.
if {$teller == 1} {
  send_user -- "- Upload Voter Keys -----------------------------------------------------------------------------------------\n"
  upload "public-voters-keys.csv" 0

  send_user -- "- Create Tracker Numbers ------------------------------------------------------------------------------------\n"
  execute_vmv "create-tracker-numbers --election public-election-params.csv public-election-keys.csv --number-of-voters $number_of_voters --publish public-tracker-numbers.csv\r"
  upload "public-tracker-numbers.csv" 0
}

# Shuffle the tracker numbers.
send_user -- "- Shuffle Tracker Numbers -------------------------------------------------------------------------------------\n"
download "public-tracker-numbers.csv"
execute_vmv "shuffle-tracker-numbers --election public-election-params.csv --tracker-numbers public-tracker-numbers.csv --publish shuffled-tracker-numbers-$teller.csv shuffle-proofs-$teller.zip --teller $teller\r"
upload "shuffled-tracker-numbers-$teller.csv" 0
upload "shuffle-proofs-$teller.zip" 0

# Create commitments.
send_user -- "- Create Commitments ------------------------------------------------------------------------------------------\n"
download "public-voters-keys.csv"
execute_vmv "create-commitments --election public-election-params.csv public-election-keys.csv --voters public-voters-keys.csv --tracker-numbers shuffled-tracker-numbers-$teller.csv --output commitments-$teller.csv --publish public-commitments-$teller.csv commitments-proofs-$teller.csv\r"
upload "commitments-$teller.csv" 0
upload "public-commitments-$teller.csv" 0
upload "commitments-proofs-$teller.csv" 0

# Decrypt commitments.
send_user -- "- Decrypt Commitments -----------------------------------------------------------------------------------------\n"
set index 1
set files ""
while {$index <= $number_of_tellers} {
  set file "public-commitments-$index.csv"
  append files "$file "
  download $file
  set index [expr $index+1]
}
execute_vmv "decrypt-commitments --election public-election-params.csv election-keys.csv --voters public-voters-keys.csv --tracker-numbers shuffled-tracker-numbers-$teller.csv --commitments $files --publish public-voters.csv decrypt-proofs-$teller.zip --teller $teller\r"
upload "public-voters.csv" 0
upload "decrypt-proofs-$teller.zip" 0

# If this is teller 1, associate the generated data with voters.
if {$teller == 1} {
  send_user -- "- Associate Voters ------------------------------------------------------------------------------------------\n"
  execute_vmv "associate-voters --election public-election-params.csv public-election-keys.csv --voters public-voters.csv ers-voters.csv --output ers-associated-voters.csv --publish public-associated-voters.csv\r"
  upload "public-associated-voters.csv" 0

  # Map vote options.
  send_user -- "- Map Vote Options --------------------------------------------------------------------------------------------\n"
  execute_vmv "map-vote-options --election public-election-params.csv --vote-options ers-vote-options.csv --publish public-vote-options.csv\r"
  upload "ers-vote-options.csv" 0
  upload "public-vote-options.csv" 0
}

download "ers-vote-options.csv"
download "public-vote-options.csv"
